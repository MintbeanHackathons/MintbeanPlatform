server {
  # server name here needs to be added to your Hostsfile
  server_name localhost;
  listen 3000;

  location /api/v1 {
    # server domain is the same as the service's name inside docker-compose.yml
    # server port is the same as the exposed port inside docker-compose.yml
    resolver 127.0.0.11;
    set $target backend:3002;
    proxy_pass http://$target;
  }

  location / {
    # server domain is the same as the service's name inside docker-compose.yml
    # server port is the same as the exposed port inside docker-compose.yml
    resolver 127.0.0.11;
    set $target frontend:3001;
    proxy_pass http://$target;
  }

  # listen 443 ssl; # managed by Certbot
  # ssl_certificate /etc/letsencrypt/live/staging.mintbean.io/fullchain.pem; # managed by Certbot
  # ssl_certificate_key /etc/letsencrypt/live/staging.mintbean.io/privkey.pem; # managed by Certbot
  # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
  # server name here needs to be added to your Hostsfile
  server_name auth.localhost;
  listen 3000;

  location / {
    # server domain is the same as the service's name inside docker-compose.yml
    # server port is the same as the exposed port inside docker-compose.yml
    resolver 127.0.0.11;
    set $target keycloak:8080;
    proxy_pass http://$target;
  }
}